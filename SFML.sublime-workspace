{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"stru",
				"structtemp	templated struct"
			],
			[
				"bottom",
				"bottomright"
			],
			[
				"bott",
				"bottomright1"
			],
			[
				"scree",
				"screenrect"
			],
			[
				"MOU",
				"MOUSEBUTTONDOWN"
			],
			[
				"c",
				"callbacks"
			],
			[
				"text_",
				"text_to_render"
			],
			[
				"text",
				"text_surface"
			],
			[
				"get",
				"get_resource"
			],
			[
				"prep",
				"prep_screen"
			],
			[
				"LEVEL",
				"LEVEL_HEIGHT"
			],
			[
				"disp",
				"dispatch_event"
			],
			[
				"get_",
				"get_resource"
			],
			[
				"rva",
				"rvalues"
			],
			[
				"Spr",
				"SpriteComponent"
			],
			[
				"componen",
				"components"
			],
			[
				"dis",
				"dispatch_event"
			],
			[
				"sprite",
				"sprite_count"
			],
			[
				"com",
				"components"
			],
			[
				"remo",
				"remove_component"
			],
			[
				"compo",
				"components"
			],
			[
				"logging",
				"logging_setup"
			],
			[
				"obj",
				"obj_ballT"
			],
			[
				"ima",
				"images"
			],
			[
				"re",
				"resources"
			],
			[
				"image",
				"imageName"
			],
			[
				"red",
				"redBall"
			],
			[
				"updat",
				"updating"
			],
			[
				"Move",
				"MovableObject"
			],
			[
				"mo",
				"move"
			],
			[
				"rect",
				"rect"
			],
			[
				"outside",
				"outsideForce"
			],
			[
				"varia",
				"variables"
			],
			[
				"y",
				"y_offset"
			],
			[
				"sw",
				"switch"
			],
			[
				"right",
				"rightValue"
			],
			[
				"con",
				"conditionalExp"
			],
			[
				"array",
				"array"
			],
			[
				"po",
				"point_slope"
			],
			[
				"ve",
				"Vector"
			],
			[
				"de",
				"degToRad"
			],
			[
				"create",
				"createArray"
			],
			[
				"set",
				"setTimer"
			],
			[
				"callback",
				"callback"
			],
			[
				"ca",
				"Callback"
			],
			[
				"dec",
				"decToBin"
			],
			[
				"merge",
				"mergeSort"
			],
			[
				"point",
				"point_slope"
			],
			[
				"Vector",
				"Vector"
			],
			[
				"Angle",
				"Angle"
			],
			[
				"range",
				"range"
			],
			[
				"j",
				"j"
			],
			[
				"i",
				"i"
			],
			[
				"Grid",
				"Grid"
			],
			[
				"args",
				"args"
			],
			[
				"list",
				"list"
			],
			[
				"str",
				"strOrList"
			],
			[
				"val",
				"val"
			],
			[
				"fibonacci",
				"fibonacciN"
			],
			[
				"deg",
				"degToRad"
			],
			[
				"pr",
				"prototype"
			],
			[
				"rad",
				"radToDeg"
			],
			[
				"rand",
				"random"
			],
			[
				"y2",
				"y2-y1"
			],
			[
				"x",
				"x2-x1"
			],
			[
				"if",
				"if	if"
			],
			[
				"table",
				"table.concat	table.concat"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/gillett/Documents/Code/C++/Platformer/component.cpp",
			"settings":
			{
				"buffer_size": 714,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gillett/Documents/Code/C++/Platformer/component.h",
			"settings":
			{
				"buffer_size": 839,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gillett/Documents/Code/C++/Platformer/main.cpp",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gillett/Documents/Code/C++/Platformer/test.cpp",
			"settings":
			{
				"buffer_size": 536,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gillett/Documents/Code/Python/Platformer/component.py",
			"settings":
			{
				"buffer_size": 10030,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/C++11/C++11.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++11/C++11.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/idle.sublime-build",
					""
				],
				[
					"Packages/User/idle3_b.sublime-build",
					""
				],
				[
					"Packages/User/pythonI.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 80.0,
		"last_filter": "ssc++",
		"selected_items":
		[
			[
				"ssc++",
				"Set Syntax: C++11"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"ssmake",
				"Set Syntax: Makefile"
			],
			[
				"linter",
				"Preferences: SublimeLinter Settings â€“ Default"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"",
				"Set Syntax: JavaScript"
			],
			[
				"html",
				"HTML: Encode Special Characters"
			],
			[
				"ja",
				"Set Syntax: JavaScript"
			]
		],
		"width": 406.0
	},
	"console":
	{
		"height": 211.0,
		"history":
		[
			"str.__dict__",
			"dir(str)",
			"dir",
			"dir(dict)",
			"dict.items",
			"dict.values",
			"dict.keys",
			"-200 % 180",
			"-2 % 3"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/gillett/Documents/Code/C++/SFML"
	],
	"file_history":
	[
		"/home/gillett/Documents/Code/C++/Platformer/ecs.h",
		"/home/gillett/Documents/Code/C++/Platformer/ecs.cpp",
		"/home/gillett/Documents/Code/Python/Platformer/json/lf_resources.json",
		"/home/gillett/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/gillett/Documents/Code/Python/Platformer/resources.py",
		"/home/gillett/Documents/Code/Python/Platformer/json/lf_keyconfig.json",
		"/home/gillett/Documents/Code/Python/Platformer/json/lf_constants.json",
		"/home/gillett/Documents/Code/Python/Platformer/lfclone.py",
		"/home/gillett/Documents/Code/Python/Platformer/main.py",
		"/home/gillett/Documents/Code/Python/Platformer/sound.py",
		"/home/gillett/Documents/Code/Python/Platformer/make_spritesheet.py",
		"/home/gillett/Documents/Code/Python/Platformer/lfclone.log",
		"/home/gillett/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
		"/home/gillett/Documents/Code/Python/Platformer/makefile",
		"/home/gillett/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/gillett/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/gillett/Documents/Code/Python/Platformer/lf_constants.json",
		"/home/gillett/Documents/Code/Python/Platformer/lf_keyconfig.json",
		"/home/gillett/Documents/Code/Python/Platformer/hello.log",
		"/home/gillett/Documents/Code/Python/Platformer/loggable_dec.py",
		"/home/gillett/Documents/Code/Python/Platformer/text.py",
		"/home/gillett/Documents/Code/Python/Platformer/components.py",
		"/home/gillett/Documents/Code/Python/Platformer/animation.py",
		"/home/gillett/Documents/Code/Python/Platformer/draw.py",
		"/home/gillett/Documents/Code/Python/Platformer/todo.txt",
		"/home/gillett/Documents/Code/Python/Platformer/README.md",
		"/home/gillett/Documents/Code/Python/Platformer/component.py",
		"/home/gillett/Documents/Code/Python/Platformer/composite.py",
		"/home/gillett/Documents/Code/Python/Platformer/constants.py",
		"/home/gillett/Documents/Code/Python/Platformer/scrolling_screen.py",
		"/home/gillett/Documents/Code/Python/Platformer/testcomposite.py",
		"/home/gillett/Documents/Code/Python/Platformer/testGravity.py",
		"/home/gillett/Documents/Code/Python/Platformer/component_base.py",
		"/home/gillett/Documents/Code/Python/Platformer/test_component_pattern.log",
		"/home/gillett/Documents/Code/Python/Platformer/test_component_pattern.py",
		"/home/gillett/Documents/Code/Python/Platformer/PlatformerEngine.log",
		"/home/gillett/Documents/Code/Python/Platformer/design.txt",
		"/home/gillett/Documents/Code/Python/Platformer/event.py",
		"/home/gillett/Documents/Code/Python/Platformer/goals.txt",
		"/home/gillett/Documents/Code/Python/Platformer/vector.py",
		"/home/gillett/Documents/Code/Python/Platformer/Make - Test.sublime-build",
		"/home/gillett/.config/sublime-text-3/Packages/User/Default (Linux).sublime-mousemap",
		"/home/gillett/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/gillett/Documents/Code/Python/Platformer/keyconfig.py",
		"/home/gillett/Documents/Code/Python/Platformer/LuftrausersClone.log",
		"/home/gillett/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/gillett/Documents/Code/Python/Platformer/keyconfig.json",
		"/home/gillett/Documents/Code/Python/miscfunc.py",
		"/home/gillett/Documents/Code/Python/Platformer/interpret_json_files.test.py",
		"/home/gillett/Documents/Code/Python/Platformer/Platformer.log",
		"/home/gillett/Documents/Code/Python/Platformer/constants.json",
		"/home/gillett/kata.py",
		"/home/gillett/Documents/Code/Python/mfunctions.py",
		"/home/gillett/.config/sublime-text-3/Packages/NimLime/NimLime.sublime-settings",
		"/home/gillett/Documents/Code/Python/Platformer/platformerEngine.py",
		"/C/Python27/Lib/site-packages/myfunc.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/PlatformerEngine/functions.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/PlatformerEngine/governer.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/PlatformerEngine/eventHandlers.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/PlatformerEngine/classes.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/engines/trajectory.py",
		"/C/Documents and Settings/Tino/Desktop/testHomepage.html",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/Trajectory/governor.py",
		"/C/Documents and Settings/Tino/My Documents/My Games/Terraria/ModPacks/Thing/Item/Rifle.ini",
		"/C/Documents and Settings/Tino/My Documents/My Games/Terraria/ModPacks/Thing/Item/Fire Bullet.ini",
		"/C/Documents and Settings/Tino/My Documents/My Games/Terraria/ModPacks/Thing/Projectile/Fire Bullet.cs",
		"/C/Documents and Settings/Tino/My Documents/My Games/Terraria/ModPacks/Thing/Projectile/Fire Bullet.ini",
		"/C/Documents and Settings/Tino/My Documents/Downloads/Defaults/Defaults/Projectile/Fire Arrow.ini",
		"/C/Documents and Settings/Tino/My Documents/Downloads/Examples/Examples/Projectile/Hellfire Chakram.cs",
		"/C/Documents and Settings/Tino/My Documents/Downloads/Examples/Examples/Projectile/Hellfire Chakram.ini",
		"/C/Documents and Settings/Tino/My Documents/Downloads/Defaults/Defaults/Projectile/Dirt Ball.ini",
		"/C/Documents and Settings/Tino/My Documents/My Games/Terraria/ModPacks/Thing/Item/Fire Bullet.cs",
		"/C/Documents and Settings/Tino/My Documents/My Games/Terraria/ModPacks/Thing/Item/Obsidian Sword.ini",
		"/C/Documents and Settings/Tino/My Documents/Downloads/Defaults/Defaults/Item/Adamantite Drill.ini",
		"/C/Documents and Settings/Tino/My Documents/My Games/Terraria/ModPacks/Thing/Item/Strange Orb.cs",
		"/C/Documents and Settings/Tino/Desktop/fileEditor.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/Platformer Engine/eventHandlers.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/Platformer Engine/classes.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/Platformer Engine/functions.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/Platformer Engine/governer.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/Platformer Engine/event.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/physics box/physics.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/myfunc.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/trajectorytest.py",
		"/C/Documents and Settings/Tino/Desktop/Code/Python/guessingGame.py",
		"/C/Documents and Settings/Tino/Desktop/Python/Trajectory/governor.py",
		"/C/Documents and Settings/Tino/Desktop/Python/Platformer Engine/governer.py",
		"/C/Documents and Settings/Tino/Desktop/Python/myfunc.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/entities/Structures.py",
		"/C/Documents and Settings/Tino/Desktop/Python/averager.py",
		"/C/Documents and Settings/Tino/Desktop/Python/Platformer Engine/guv'nr.py",
		"/C/Documents and Settings/Tino/Desktop/Python/Platformer Engine/governor.py",
		"/C/Documents and Settings/Tino/Application Data/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Documents and Settings/Tino/My Documents/My Games/Terraria/Worlds/The Cursed Return.wld",
		"/C/Documents and Settings/Tino/Desktop/Python/Trajectory/myfunc.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/SandCastleDefense.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/entities/Characters.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/entities/Menu.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/entities/map.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/entities/base.py",
		"/C/Documents and Settings/Tino/Desktop/JavaScript/myFunk.js",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/entities/Aspects.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/engines/wave.py",
		"/C/Documents and Settings/Tino/My Documents/GitHub/SandCastleDefense/python/DI.py",
		"/C/Documents and Settings/Tino/Desktop/Python/thing.py",
		"/C/Documents and Settings/Tino/Desktop/Python/colorScreen.py",
		"/C/Documents and Settings/Tino/My Documents/Terraria deComp/Terraria/Projectile.cs",
		"/C/Documents and Settings/Tino/My Documents/Terraria 1.1/Content/TerrariaMusic.xgs",
		"/C/Documents and Settings/Tino/My Documents/Terraria 1.1/Content/Wave Bank.xwb",
		"/C/Documents and Settings/Tino/My Documents/Terraria 1.1/Content/Sound Bank.xsb",
		"/C/Documents and Settings/Tino/Desktop/C++/newFile.bin",
		"/C/Documents and Settings/Tino/Desktop/C++/newFile.exe",
		"/C/Documents and Settings/Tino/Desktop/Python/sinGen.py",
		"/C/Documents and Settings/Tino/Desktop/Python/vehicalMaker.py",
		"/C/Documents and Settings/Tino/Desktop/Python/test1.py",
		"/C/Documents and Settings/Tino/Desktop/Python/volume.py",
		"/C/Documents and Settings/Tino/Desktop/Python/fileEditor.py",
		"/C/Documents and Settings/Tino/Desktop/Java/Game in java/screen.java",
		"/C/Documents and Settings/Tino/Desktop/C++/newFile.cpp",
		"/C/Documents and Settings/Tino/Application Data/Sublime Text 2/Packages/Java/syso.sublime-snippet",
		"/G/Music/Mumford And Sons/Mumford And Sons/12 Mumford And Sons - After the Storm.mp3",
		"/C/Documents and Settings/Tino/Desktop/Python/myfunc.pyc",
		"/C/Documents and Settings/Tino/Desktop/index.js",
		"/C/Documents and Settings/Tino/Desktop/Project1.dev",
		"/C/Documents and Settings/Tino/Desktop/main.o",
		"/C/Documents and Settings/Tino/Desktop/CutTheRope2.0/AndroidManifest.xml",
		"/C/Documents and Settings/Tino/Desktop/test.java",
		"/C/Documents and Settings/Tino/Desktop/lame_enc.dll"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Entity",
			"id",
			"640",
			"800",
			"tply",
			"tplx",
			"nptply",
			"nptplx",
			"topleft1",
			"topleft2",
			"640",
			"800",
			"topleft1",
			"bg_rect",
			"screen.get_rect()",
			"attached_events",
			"find",
			"replace",
			"args",
			"find",
			"^\\s*print",
			"fn",
			"fns",
			"target.rect",
			"self.state.topleft",
			"pdir",
			"all",
			"mul_ip",
			"pygame.key.name(key)",
			"player.pos",
			"self.obj",
			"vector.x",
			"vector.y",
			"vector",
			"strip",
			"v...\\(",
			"super\\(\\)",
			"self.p.pos",
			"xcomponent",
			"1",
			"x",
			"lengthdir",
			"keyconfig",
			"sprite",
			"constants",
			"log(a)",
			"log(d)",
			"DEBUG",
			"self.containers",
			"applyfriction",
			"screenUpdateList",
			"get_num_channels",
			"v",
			"vector",
			"point\\[0\\]",
			"	\"\"\".*(\\n	.*)*\"\"\"",
			"\"\"\".*\"\"\"",
			"image",
			"+=",
			"=",
			"optimalAngle",
			"point_direction",
			"point_distance",
			"projectileMotion",
			"\"\"\".*\\n?.*\\n?.*\\n?.*\\n?\"\"\"",
			"\"\"\"(.*\\n*)\"\"\"",
			"		",
			"=",
			"==",
			"if",
			"=",
			"world",
			"range",
			"canvas",
			"Quadratic",
			"degrees",
			"radians",
			"cos",
			"sin",
			"degrees",
			"radians",
			"arccos",
			"sqrt",
			"tan",
			"cos",
			"sin",
			"to_radians",
			"print \\\"+.\\\"",
			"x",
			"obj_ballT",
			"projectile",
			"distancePoint",
			";",
			"to_radians",
			"from math import .+",
			"  ",
			"for\\s?\\(var i = 0.*\\)\\s*\\{",
			"for\\s?\\(var\\s+i\\s*=\\s*\\d\\)",
			"  ",
			"\\n\\n",
			"^\\s",
			"function",
			"var .+ = exports\\..+ = function .+\\(.*\\) \\{",
			"var .* = function",
			"exports\\..+ =",
			"exports\\..+ = fun",
			"= function .*",
			"= function .+\\(.*\\) \\{",
			"Grid",
			"var .+ = function .+",
			"var .+ = function .+\\( .* \\)",
			"var .+ = function",
			"var .* = function",
			"for\\s\\(var i =",
			"function .*\\(.*\\)\\s*\\{",
			".+\\.prototype\\..* =",
			"\\};",
			"array\\.prototype\\.",
			"\\d\\d:\\d\\d:\\d\\d,\\d\\d\\d\\+",
			"\\d\\d:\\d\\d:\\d\\d,\\d\\d\\d",
			"mod",
			"/*;*/a",
			"forEach",
			".forEach",
			".add",
			".prototype.add",
			"Angle",
			"point2"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"functionn"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/gillett/Documents/Code/C++/Platformer/component.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 714,
						"regions":
						{
						},
						"selection":
						[
							[
								100,
								100
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/gillett/Documents/Code/C++/Platformer/component.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 839,
						"regions":
						{
						},
						"selection":
						[
							[
								618,
								618
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 285.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/gillett/Documents/Code/C++/Platformer/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/C++11/C++11.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/gillett/Documents/Code/C++/Platformer/test.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 536,
						"regions":
						{
						},
						"selection":
						[
							[
								480,
								460
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++11/C++11.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "/home/gillett/Documents/Code/Python/Platformer/component.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10030,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 342.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 296.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 390.0
	},
	"pinned_build_system": "",
	"project": "SFML.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/Code/Python/Platformer/Platformer.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 44.0,
		"last_filter": "object",
		"selected_items":
		[
			[
				"object",
				"Object"
			],
			[
				"",
				"test:"
			]
		],
		"width": 326.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 166.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
